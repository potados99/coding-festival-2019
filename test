#!/bin/bash

PYTHON="/usr/bin/env python3"

# Usage: test [solution file (python)] [input file] [output file]
function test {
    if [ $# -lt 3 ]; then
    	usage
    	return 1
    fi

    solution_file="$1"
    input_file="$2"
    output_file="$3"

    result=$(cat $input_file | $PYTHON $solution_file)
    exit_code="$?"

    if [ $exit_code -ne 0 ]; then
    	echo "runtime error."
    	return $exit_code
    fi

    if [ "$result" = "$(cat $output_file)" ]; then
    	# Success
    	return 0
    else
    	# Fail
    	echo "test failed with $input_file and $output_file."
    	return 1
    fi
}

# Usage: test_problems [problem] ...
function test_problems {
    problems=$@
    test_result=0

    for prob in $problems; do
        test_case_path="./problems/$prob/data"
    	data=$(ls $test_case_path | sed 's/[.in|.out]// g' | uniq | sort -n)
    	succeded=1
    	for i in $data; do
    		out=$(test ./solutions/$prob.py $test_case_path/$i.in $test_case_path/$i.out)
    		if [ "$?" -ne 0 ]; then
    			echo "Test failed for $prob: $out"
    			succeded=0
    			test_result=1
    			break
    		fi
    	done

    	if [ $succeded -eq 1 ]; then
    		echo "Test succeded for $prob."
    	fi
    done

    return $test_result
}

# Usage: test_all
function test_all {
    test_problems A B C D E F G H
    return $?
}

if [ $# -lt 1 ]; then
    test_all
else
    test_problems $@
fi

exit $?
